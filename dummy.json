{
  "@id": "dummy",
  "title": "A Dummy Profile scenario",
  "tests": [
    {
      "@id": "test1",
      "title": "Unowned files or directories",
      "blocks": [
        {
          "@id": "test1_block1",
          "title": "List files or directories not owned by a known user (under /home/ekolesni/.local/)",
          "command": "/usr/bin/find",
          "args": ["/home/ekolesni/.cache/", "-nouser", "-printf", "\u001E{\"file\": \"%p\"}\u000A"]
        }
      ]
    },
    {
      "@id": "test2",
      "title": "Persistent filesystems that allow special devices",
      "blocks": [
        {
          "@id": "test2_block1",
          "title": "List all persistent filesystem configurations from /etc/fstab",
          "command": "/usr/bin/findmnt",
          "args": ["--fstab", "--json"]
        },
        {
          "@id": "test2_block2",
          "title": "Find filesystems with 'nodev' option enabled",
          "command": "/usr/bin/jq",
          "args": ["-e", ".filesystems[] | select(.options | contains(\"nodev\") | not)", "@test2_block1"]
        }
      ]
    },
    {
      "@id": "test3",
      "title": "SSH client looks up host keys in DNS",
      "blocks": [
        {
          "@id": "test3_block1",
          "title": "Find enabled VerifyHostKeyDNS option in /etc/ssh_config or /etc/ssh_config.d/*",
          "command": "/usr/bin/grep",
          "args": ["-c", "-P", "-r", "^VerifyHostKeyDNS\\syes", "/etc/ssh/ssh_config", "/etc/ssh/ssh_config.d"],
          "rc_ok": [0, 1],
          "wrap": ["stringify"]
        },
        {
          "@id": "test3_block2",
          "title": "Check if VerifyHostKeyDNS option is present in any configuration file",
          "command": "/usr/bin/jq",
          "args": ["-e", "-s", "-c", "if [.[] | endswith(\":0\")] | all then {\"file\": .[] | split(\":\")[0]} else {} end", "@test3_block1"]
        }
      ]
    },
    {
      "@id": "test4",
      "title": "SSH client looks up host keys in DNS (Python + Augeas)",
      "blocks": [
        {
          "@id": "test4_block1",
          "title": "Find enabled VerifyHostKeyDNS option in /etc/ssh_config.d/*",
          "command": "./probe-python-augeas",
          "deps": ["python3-augeas"],
          "args": ["etc/ssh/ssh_config.d/*", "VerifyHostKeyDNS"]
        }
      ]
    },
    {
      "@id": "test5",
      "title": "Firewall is active",
      "blocks": [
        {
          "@id": "test5_block1",
          "title": "Get the status of firewalld.service",
          "command": "/usr/bin/systemctl",
          "args": ["is-enabled", "firewalld"],
          "rc_ok": [0, 4],
          "wrap": ["stringify"]
        },
        {
          "@id": "test5_block2",
          "title": "Convert status into a record",
          "command": "/usr/bin/jq",
          "args": [
            "-e", "-s", "-c",
            "[{\"service\": \"firewalld\", \"enabled\": (if .[] == \"enabled\" then true else false end) }]",
            "@test5_block1"
          ]
        },
        {
          "@id": "test5_block3",
          "title": "Check if the service is enabled (OPA/Rego)",
          "command": "/usr/bin/opa",
          "args": ["eval", "-f", "raw", "-d", "/dev/stdin", "-i", "@test5_block2", "data.enabled_service.res"],
          "in": [
            "package enabled_service",
            "",
            "res[serv] {",
            "   serv := input[_]",
            "   input[_].enabled == false",
            "}"
          ]
        }
      ]
    },
    {
      "@id": "test6",
      "title": "Just a bogus test with a failing block",
      "blocks": [
        {
          "@id": "test6_block1",
          "title": "Fail miserably",
          "command": "/usr/bin/grep",
          "args": ["blah", "/tmp/non-existent-file"]
        }
      ]
    }
  ]
}